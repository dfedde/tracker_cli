#!/usr/bin/env ruby

lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'curses'
require 'tracker_cli'

$stderr.reopen(File.open('traker_error.txt', 'w'))

Curses.init_screen

begin
  Curses.crmode
  # make the cursor invisable
  Curses.curs_set(0)

  loading_window =Curses::Window.new(11,90,(Curses.lines - 11)/2,(Curses.cols-90)/2)
  File.foreach("#{lib}/tracker_logo").with_index do |line, i|
    loading_window.setpos(i, 0)
    loading_window.addstr line
  end
  loading_window.refresh

  # these are expencive put them in a thread
  PivotalTracker::Client.token = '1900796d209324d6abe9d59ae0ac710f'
  project = PivotalTracker::Project.find(1506772)

  pv = ProjectView.new(Curses::Window.new(0,0,0,0))

  loop do
    sleep 3
    pv.draw project
  end
rescue Exception => e
    $stderr.puts e.inspect
    $stderr.puts e.backtrace
ensure
  Curses.close_screen
end
